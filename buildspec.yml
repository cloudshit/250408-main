version: 0.2

phases:
  pre_build:
    commands:
      # Install buildx
      - export BUILDX_VERSION=$(curl --silent "https://api.github.com/repos/docker/buildx/releases/latest" |jq -r .tag_name)
      - curl -JLO "https://github.com/docker/buildx/releases/download/$BUILDX_VERSION/buildx-$BUILDX_VERSION.linux-amd64"
      - mkdir -p ~/.docker/cli-plugins
      - mv "buildx-$BUILDX_VERSION.linux-amd64" ~/.docker/cli-plugins/docker-buildx
      - chmod +x ~/.docker/cli-plugins/docker-buildx

      # Define variables
      - REGISTRY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - REPOSITORY_URI=$REGISTRY_URI/$IMAGE_REPO_NAME
      - IMAGE_TAG=$(TZ=Asia/Seoul date +"%Y-%m-%d.%H.%M.%S")

      # binfmt format
      - docker run --privileged --rm tonistiigi/binfmt --install arm64
      
      # Login ecr
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REGISTRY_URI

  build:
    commands:
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG --platform linux/amd64,linux/arm64 .
      
  post_build:
    commands:
      - docker run -v /var/run/docker.sock:/var/run/docker.sock public.ecr.aws/aquasecurity/trivy image --exit-code 1 --severity MEDIUM,HIGH,CRITICAL $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - >-
        printf '{"ImageURI": "%s"}' $REPOSITORY_URI:$IMAGE_TAG > imageDetail.json

artifacts:
  files: 
    - imageDetail.json
    - appsepc.yaml
    - taskdef.json
